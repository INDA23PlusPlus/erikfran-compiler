<block> ::= E | <statment>
<statment> ::= <ow> ( <if> | <print> | <while> | <let> | <assignment> ) <ow>

<if> ::= ( "if " <boolean_expr> <ow> "{" <block> <ow> "}" ) ( <ow> "else " <ow> "{" <block> <ow> "}" )?
<while> ::= "while " <boolean_expr> <ow> "{" <block> <ow> "}" 
<print> ::= "print(" <expr> ");"
<let> ::= "let " <variable> <ow> "=" <ow> <expr> ";"
<assignment> ::= <variable> <ow> "=" <ow> <expr> ";"

<boolean_expr> ::= <expr> <ow> "==" <ow> <expr> | <expr> <ow> ">" <ow> <expr> | <expr> <ow> "<" <ow> <expr> | <boolean_expr> <ow> "&&" <ow> <boolean_expr> | <boolean_expr> <ow> "||" <ow> <boolean_expr> | "!" <ow> <boolean_expr> | "true" | "false" 

<expr> ::= <expr> <ow> "+" <ow> <term> | <expr> <ow> "-" <ow> <term> | <term>
<term> ::= <term> <ow> "*" <ow> <factor> | <term> <ow> "/" <ow> <factor> | <term> <ow> "^" <ow> <factor> | <term> <ow> "%" <ow> <factor> | <factor>
<factor> ::= "(" <expr> ")" | <number> | <variable>

<number> ::= [0-9]+

/* snacke_case variable names enforced by the compiler */
<variable> ::= ( ( [0-9] | [a-z] )+ "_"* )

/* optional whitespace */
<ow> ::= E | " " | "\n" | "\t" | "\r"

